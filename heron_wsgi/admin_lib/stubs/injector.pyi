# Stubs for injector (Python 2)

from typing import Any, Callable, List, Optional, TypeVar

T = TypeVar('T')

def singleton(f: T) -> T: ...

def provides(interface: Any, scope: Optional[Any] = ..., eager: bool = ...) -> Callable[[T], T]: ...

def inject(function: Optional[Any] = ..., **bindings: Any) -> (Callable[[T], T]): ...

def Key(name: Any) -> type: ...

class Module: ...
      
class Injector:
    def __init__(self, ms: List[Module]): ...
    def get(self, k: type) -> Any: ...
    